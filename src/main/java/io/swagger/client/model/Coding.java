/*
 * LE Indexer API
 * &copy; 2018 Health Language
 *
 * OpenAPI spec version: 8.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Coding
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-10-01T09:30:57.014Z")
public class Coding {
  @SerializedName("code")
  private String code = null;

  @SerializedName("display")
  private String display = null;

  @SerializedName("system")
  private String system = null;

  public Coding code(String code) {
    this.code = code;
    return this;
  }

   /**
   * the code of the extracted concept
   * @return code
  **/
  @ApiModelProperty(value = "the code of the extracted concept")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Coding display(String display) {
    this.display = display;
    return this;
  }

   /**
   * the display term of the extracted concept
   * @return display
  **/
  @ApiModelProperty(value = "the display term of the extracted concept")
  public String getDisplay() {
    return display;
  }

  public void setDisplay(String display) {
    this.display = display;
  }

  public Coding system(String system) {
    this.system = system;
    return this;
  }

   /**
   * the codesystem that the concept belongs to
   * @return system
  **/
  @ApiModelProperty(value = "the codesystem that the concept belongs to")
  public String getSystem() {
    return system;
  }

  public void setSystem(String system) {
    this.system = system;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Coding coding = (Coding) o;
    return Objects.equals(this.code, coding.code) &&
        Objects.equals(this.display, coding.display) &&
        Objects.equals(this.system, coding.system);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, display, system);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Coding {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    display: ").append(toIndentedString(display)).append("\n");
    sb.append("    system: ").append(toIndentedString(system)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

